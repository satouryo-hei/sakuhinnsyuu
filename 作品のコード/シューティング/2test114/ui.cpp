//=============================================================================
//
// UIの処理 [polygon.cpp]
// Author : 佐藤瞭平
//
//=============================================================================
#include"ui.h"
#include"manager.h"
#include"renderer.h"
#include"scene2D.h"
#include"polygon.h"


//=============================================================================
// UIのコンストラクタ
//=============================================================================
CUi::CUi(int nPriority) : CScene(nPriority)
{

}

//=============================================================================
// UIのデストラクタ
//=============================================================================
CUi::~CUi()
{

}

CUi *CUi::Create(D3DXVECTOR3 pos, D3DXVECTOR2 Size)
{
	CUi *pUi = NULL;
	pUi = new CUi;

	if (pUi != NULL)
	{
		pUi->Init(pos, Size);
	}
	return pUi;
	
}

//=============================================================================
// UIの初期化処理
//=============================================================================
HRESULT CUi::Init(D3DXVECTOR3 pos, D3DXVECTOR2 Size)
{
	LodeUI();
	for (int nCnt = 0; nCnt < 2; nCnt++)
	{
		CPolygon::Create(m_LodePos[nCnt], m_LodeSize[nCnt], nCnt);
	}

	return S_OK;
}

//=============================================================================
// UIの終了処理
//=============================================================================
void CUi::Uninit(void)
{	
	Relese();
}

//=============================================================================
// UIの更新処理
//=============================================================================
void CUi::Update(void)
{

}

//=============================================================================
// UIの描画処理
//=============================================================================
void CUi::Draw(void)
{
}

//=============================================================================
// UIの読み込み処理
//=============================================================================
void CUi::LodeUI(void)
{
	// 開け〜ファイル！
	FILE *pFile = fopen(SETUITEXT, "r");
	//--------------------------
	// 読み込む用の変数
	//--------------------------
	char aFile[3][128] = {};
	char aName[128] = {};
	int nSetCnt = 0;
	D3DXVECTOR3 pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	D3DXVECTOR2 size = D3DXVECTOR2(0.0f, 0.0f);

	// ファイルがあったら
	if (pFile != NULL)
	{
		// 無限ループ
		while (1)
		{
			fscanf(pFile, "%s", &aFile[0][0]);										// 1列を読み込み(2行目以降は上書きされる)

			if (strcmp(&aFile[0][0], "NUM_UI") == 0)								// NUM_UIが見つかったら
			{
				fscanf(pFile, "%s%d", &aName[0], &m_nNumUi);						// UIの数を読み込む
			}

			while (strcmp(&aFile[0][0], "SETUI") == 0)								// SETUIが見つかったら
			{
				fscanf(pFile, "%s", &aFile[1]);										// 1列を読み込み(2行目以降は上書きされる)
				if (strcmp(&aFile[1][0], "POS") == 0)								// POSが見つかったら
				{
					fscanf(pFile, "%s%f%f%f", &aName[0], &pos.x, &pos.y, &pos.z);	// 現在の位置を読み込む
				}
				else if (strcmp(&aFile[1][0], "SIZE") == 0)							// SIZEが見つかったら
				{
					fscanf(pFile, "%s%f%f", &aName[0], &size.x, &size.y);			// 現在の大きさを読み込む
				}
				else if (strcmp(&aFile[1][0], "END_SETUI") == 0)					// END_SETUIが見つかったら
				{
					m_LodePos[nSetCnt] = pos;										// 読み込んだ位置情報をメンバのSetPosに移す
					m_LodeSize[nSetCnt] = size;										// 読み込んだ大きさ情報をメンバのSetSizeに移す
					nSetCnt++;														// 次の方
					break;															// 無限ループを抜ける
				}
			}
			if (strcmp(&aFile[0][0], "END_SCRIPT") == 0)							// END_SCRIPTが見つかったら
			{
				break;																// 無限ループを抜ける
			}
		}
	}
	else
	{
		printf("ファイルが読み込まれませんでした。");
	}

	// 閉じれ〜ファイル！
	fclose(pFile);
}