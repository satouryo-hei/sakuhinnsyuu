//=============================================================================
//
// 管理処理 [maneger.cpp]
// Author : 佐藤瞭平
//
//=============================================================================
#include"stage_manager.h"
#include"renderer.h"
#include"scene.h"
#include"input.h"
#include"texture.h"
#include"title.h"
#include"result.h"
#include"game.h"
#include"fade.h"
#include"camera.h"
#include"light.h"
#include"select.h"

//=============================================================================
// 静的メンバ関数の宣言
//=============================================================================
CStage_Manager::STAGE CStage_Manager::m_Stage = STAGE_TUTORIAL;
CStage_Manager::STAGE CStage_Manager::m_NextStage = STAGE_INVALID;

//=============================================================================
// コンストラクタ
//=============================================================================
CStage_Manager::CStage_Manager()
{
}

//=============================================================================
//　デストラクタ
//=============================================================================
CStage_Manager::~CStage_Manager()
{
}


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CStage_Manager::Init(void)
{
	return S_OK;
}


//=============================================================================
// 終了処理
//=============================================================================
void CStage_Manager::Uninit(void)
{
	//CScene::ReleaseAll();
}


//=============================================================================
// 更新処理
//=============================================================================
void CStage_Manager::Update(void)
{

}


//=============================================================================
// 描画処理
//=============================================================================
void CStage_Manager::Draw(void)
{

}

//=============================================================================
// モードの設定処理
//=============================================================================
void CStage_Manager::SetStage(STAGE Stage)
{
	m_NextStage = Stage;
}

//=============================================================================
// モードの切り替え処理
//=============================================================================
void CStage_Manager::ChangeStage(void)
{
	if (m_NextStage == STAGE_INVALID)
	{
		return;
	}

	switch (m_Stage)
	{
	case STAGE_TUTORIAL:		
		break;

	case STAGE_TOP:
		
		break;	

	default:
		break;
	}
	

	switch (m_NextStage)
	{
	case STAGE_TUTORIAL:
		break;

	case STAGE_TOP:
		break;

	default:
		break;
	}
	m_Stage = m_NextStage;
	m_NextStage = STAGE_INVALID;
}