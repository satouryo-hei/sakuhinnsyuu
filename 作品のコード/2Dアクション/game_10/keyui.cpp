//=============================================================================
//
// 鍵のUIの処理 [keyui.cpp]
// Author : 佐藤瞭平
//
//=============================================================================
#include"keyui.h"
#include"renderer.h"
#include"manager.h"
#include"player.h"
#include"keynum.h"



//=============================================================================
// 静的メンバ変数の宣言
//=============================================================================
CKeynum * CKeyui::m_pKeynum = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CKeyui::CKeyui(PRIORITY Priority) :CScene2D(PRIORITY_UI)
{
	m_Pos = D3DXVECTOR3(100.0f, 50.0f, 0);
	m_Size = D3DXVECTOR2(100.0f, 50.0f);
}


//=============================================================================
// デストラクタ
//=============================================================================
CKeyui::~CKeyui()
{

}

//=============================================================================
// 鍵のUIの生成処理
//=============================================================================
CKeyui *CKeyui::Create(D3DXVECTOR3 pos, D3DXVECTOR2 size)
{
	// 2Dエフェクトのポインター生成
	CKeyui* pKeyui = NULL;

	// 動的メモリの確保
	pKeyui = new CKeyui;

	// NULLチェック
	if (pKeyui != NULL)
	{
		pKeyui->m_Size = size;

		// 鍵のUIの初期化処理
		pKeyui->Init(pos, size);
		pKeyui->Bindtexture(17);
	}
	return pKeyui;
}

//=============================================================================
// 鍵のUIの初期化処理
//=============================================================================
HRESULT CKeyui::Init(D3DXVECTOR3 pos, D3DXVECTOR2 size)
{
	m_Pos = pos;
	CScene2D::Init(pos, size);
	m_pKeynum = CKeynum::Create(pos, D3DXVECTOR2(20, 20));
	return S_OK;
}	//  ロゴの初期化処理の終了



//=============================================================================
// 鍵のUIの終了処理
//=============================================================================
void CKeyui::Uninit(void)
{
	// シーンの解放処理
	Release();

}// ロゴの終了処理の終了


//=============================================================================
// 鍵のUIの更新処理
//=============================================================================
void CKeyui::Update(void)
{
	CScene2D::Update();
}// 鍵のUIの更新処理終了



//=============================================================================
// 鍵のUIの描画処理
//=============================================================================
void CKeyui::Draw(void)
{
	CScene2D::Draw();
}	// 鍵のUIの描画処理終了
